@echo off
REM PROJECTEND - SPRING BOOT APPLICATION
REM Script ch·∫°y ·ª©ng d·ª•ng Spring Boot v·ªõi auto-kill port c≈© cho Windows

setlocal enabledelayedexpansion

echo üöÄ === PROJECTEND SPRING BOOT APPLICATION ===
echo üìÖ Starting at %date% %time%
echo.

REM Check if running on Windows
echo ‚ÑπÔ∏è  Detected OS: Windows
echo.

REM Kill existing process on port 8080
echo ‚ÑπÔ∏è  Checking for existing processes on port 8080...

REM Find process using port 8080
for /f "tokens=5" %%a in ('netstat -aon ^| findstr :8080 ^| findstr LISTENING') do (
    set EXISTING_PID=%%a
)

if defined EXISTING_PID (
    echo ‚ö†Ô∏è  Found existing process on port 8080 ^(PID: !EXISTING_PID!^)
    echo ‚ÑπÔ∏è  Killing existing process...
    taskkill /PID !EXISTING_PID! /F >nul 2>&1
    timeout /t 2 /nobreak >nul
    echo ‚úÖ Successfully killed existing process
) else (
    echo ‚úÖ Port 8080 is available
)
echo.

REM Check Java installation
echo ‚ÑπÔ∏è  Checking Java installation...
java -version >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Java is installed
    java -version 2>&1 | findstr "version"

    REM Check Java version (basic check)
    for /f "tokens=3" %%i in ('java -version 2^>^&1 ^| findstr "version"') do (
        set JAVA_VERSION_STRING=%%i
    )
    set JAVA_VERSION_STRING=!JAVA_VERSION_STRING:"=!

    REM Extract major version
    for /f "tokens=1 delims=." %%j in ("!JAVA_VERSION_STRING!") do (
        set JAVA_MAJOR=%%j
    )

    if !JAVA_MAJOR! geq 17 (
        echo ‚úÖ Java version is compatible ^(17+^)
    ) else (
        echo ‚ö†Ô∏è  Java version might be too old. Recommended: Java 17+
    )
) else (
    echo ‚ùå Java is not installed or not in PATH!
    echo ‚ÑπÔ∏è  Please install Java 17+ from: https://adoptium.net/
    echo ‚ÑπÔ∏è  Or from: https://www.oracle.com/java/technologies/downloads/
    pause
    exit /b 1
)
echo.

REM Check Maven installation
echo ‚ÑπÔ∏è  Checking Maven installation...
mvn -version >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ Maven is installed
    mvn -version 2>&1 | findstr "Apache Maven"
) else (
    echo ‚ùå Maven is not installed or not in PATH!
    echo ‚ÑπÔ∏è  Please install Maven from: https://maven.apache.org/download.cgi
    echo ‚ÑπÔ∏è  Or use Maven Wrapper: mvnw.cmd instead of mvn
    pause
    exit /b 1
)
echo.

REM Check if pom.xml exists
if not exist "pom.xml" (
    echo ‚ùå pom.xml not found! Make sure you're in the project root directory.
    pause
    exit /b 1
)

echo ‚úÖ All prerequisites are satisfied
echo.

echo ‚ÑπÔ∏è  === STEP 1: CLEANING PREVIOUS BUILD ===
call mvn clean -q

if %errorlevel% neq 0 (
    echo ‚ùå Maven clean failed!
    pause
    exit /b 1
)
echo ‚úÖ Clean completed successfully
echo.

echo ‚ÑπÔ∏è  === STEP 2: COMPILING PROJECT ===
call mvn compile -q

if %errorlevel% neq 0 (
    echo ‚ùå Compilation failed! Please check your code for errors.
    pause
    exit /b 1
)
echo ‚úÖ Compilation completed successfully
echo.

echo ‚ÑπÔ∏è  === STEP 3: STARTING SPRING BOOT APPLICATION ===
echo üåê Application will be available at: http://localhost:8080
echo üì± Main pages:
echo    ‚Ä¢ Home: http://localhost:8080/
echo    ‚Ä¢ Cart: http://localhost:8080/giohang
echo    ‚Ä¢ Products: http://localhost:8080/sanpham
echo    ‚Ä¢ Login: http://localhost:8080/login
echo.
echo ‚ö†Ô∏è  Press Ctrl+C to stop the application
echo.

REM Start the application
call mvn spring-boot:run
start http://localhost:8080

REM This will run when application stops
echo.
echo ‚ÑπÔ∏è  Application stopped.
echo ‚ÑπÔ∏è  Goodbye! üëã
pause
